from __future__ import annotations

import yaml
from textwrap import indent
from pathlib import Path

from core.utils import describe_table, DB_PATH, list_tables

def load_table_aliases(path="table_aliases.yaml") -> dict:
    yaml_path = Path(path)
    if not yaml_path.exists():
        return {}
    with yaml_path.open("r", encoding="utf-8") as f:
        return yaml.safe_load(f)

def make_system_prompt(table: str) -> str:
    cols_fmt = "\n".join(
        f"- {col} ({ctype})" for col, ctype in describe_table(table)
    )
    return f"""
Voc√™ √© a HuB-IA, assistente de IA da Fecom√©rcio.
Seu papel √© criar consultas SQL a partir de perguntas de usu√°rios e depois interpretar os resultados.

Banco de Dados: {DB_PATH.name}
Tabela: {table}
Colunas:
{indent(cols_fmt, '')}

REGRAS:
1. Gere apenas a QUERY SQL, sem coment√°rios ou explica√ß√µes.
2. Utilize SUM(), COUNT(), AVG() quando fizer sentido.
3. N√£o modifique a base (apenas DQL).
4. Comece sempre com SELECT ou WITH.
5. Ao comparar colunas de texto como 'Localidade', 'Grupo', 'Subgrupo', 'Sexo', 'Faixa Et√°ria', etc., use `LOWER(coluna)` e compare com valores em min√∫sculas.  
   Exemplo: `WHERE LOWER(Localidade) = 'recife'`
6. N√£o explique nem justifique a resposta. Apenas retorne a query SQL.
""".strip()

def make_system_prompt_all() -> str:
    aliases = load_table_aliases()

    prompt = f"""
Voc√™ √© a HuB-IA, uma intelig√™ncia artificial treinada para responder perguntas com base em um banco de dados p√∫blico da Fecom√©rcio.

Seu papel √© transformar perguntas em linguagem natural em consultas SQL v√°lidas e eficientes, usando o conhecimento sobre os dados dispon√≠veis.

As informa√ß√µes est√£o organizadas em tabelas, cada uma representando um conjunto de estat√≠sticas econ√¥micas espec√≠ficas.

Veja abaixo as tabelas dispon√≠veis, com uma breve descri√ß√£o de cada uma:
"""

    for table in list_tables():
        desc = aliases.get(table, "Sem descri√ß√£o dispon√≠vel")
        cols = describe_table(table)
        cols_fmt = "\n".join(f"- {col} ({ctype})" for col, ctype in cols)
        prompt += f"\n\n Tabela: `{table}`\nüìò Descri√ß√£o: {desc}\n Colunas:\n{indent(cols_fmt, '  ')}"

    prompt += """


Regras de gera√ß√£o:

1. Nunca modifique os dados apenas selecione, filtre ou agregue.
2. Utilize fun√ß√µes como `SUM()`, `AVG()`, `COUNT()` quando forem √∫teis para responder √† pergunta.
3. Utilize `WHERE` para filtrar por ano, localidade ou grupo, sempre que poss√≠vel.
4. Considere o nome das tabelas e suas descri√ß√µes como fontes confi√°veis de informa√ß√£o.
5. Quando a pergunta citar cidades ou regi√µes (ex: Recife, Brasil, PE), prefira tabelas que tenham esses nomes.
6. D√™ prefer√™ncia a tabelas que j√° possuem o nome da localidade no nome ou descri√ß√£o.
7. Comece sempre com SELECT ou WITH.
8. Explique brevemente e responda em linguagem natural. Gere apenas a query SQL.
9. Sempre trate compara√ß√µes com campos textuais (ex: Localidade, Sexo, Grupo) como insens√≠veis a mai√∫sculas/min√∫sculas, usando `LOWER(coluna) = 'valor'`.
10. N√£o adivinhe. Se n√£o souber como montar a query, n√£o gere nada.
11. Caso n√£o existam dados compat√≠veis com a pergunta, retorne apenas: `-- Dados n√£o dispon√≠veis.`

Exemplo de pergunta:

- Qual foi o IPCA acumulado em Recife em 2024?
Resposta esperada:
```sql
SELECT * FROM ipca_7060_recife WHERE LOWER(Localidade) = 'recife' AND YEAR(periodo) = 2024;

Responda apenas com a query SQL. Nada mais.
"""

    return prompt.strip()

# Prompt fixo para interpreta√ß√£o
INTERPRET_SYSTEM_PROMPT = """
Voc√™ √© uma assistente especializada em dados econ√¥micos. Sua tarefa √© interpretar *objetivamente* os resultados de uma consulta SQL. 

Seu foco √© transformar dados brutos em uma resposta **clara, natural e √∫til**, sem repetir a pergunta original.

- Foque apenas nos dados relevantes retornados.
- Seja clara, concisa e evite explica√ß√µes desnecess√°rias ou que gerem redund√¢ncias.
- N√£o repita a pergunta do usu√°rio.
- Se o resultado estiver vazio, diga isso claramente (ex: "N√£o foram encontrados dados para esta pergunta").
- Se o dado for num√©rico ou percentual, destaque o valor com precis√£o e sem rodeios.
- Use linguagem natural e direta.
- Se houver m√∫ltiplos resultados, resuma-os de forma clara (por exemplo, usando bullet points).

Exemplo:

Resposta: Em 2022, o IPCA de Recife foi de 4,5%.


Resposta: - 2021: 250 empresas fecharam.
- 2022: 310 empresas fecharam.
"""
